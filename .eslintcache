[{"C:\\code_docs\\code_docs\\src\\redux\\store.js":"1","C:\\code_docs\\code_docs\\src\\redux\\rootReducer.js":"2","C:\\code_docs\\code_docs\\src\\style\\colors.js":"3","C:\\code_docs\\code_docs\\src\\sign\\reducer.js":"4","C:\\code_docs\\code_docs\\src\\sign\\SignPage.jsx":"5"},{"size":543,"mtime":1612097118798,"results":"6","hashOfConfig":"7"},{"size":186,"mtime":1612296206500,"results":"8","hashOfConfig":"7"},{"size":159,"mtime":1612097118824,"results":"9","hashOfConfig":"7"},{"size":225,"mtime":1612097118822,"results":"10","hashOfConfig":"7"},{"size":5469,"mtime":1612297105143,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1zufho",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":9,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":null},"C:\\code_docs\\code_docs\\src\\redux\\store.js",[],["23","24","25","26","27","28"],"C:\\code_docs\\code_docs\\src\\redux\\rootReducer.js",[],"C:\\code_docs\\code_docs\\src\\style\\colors.js",[],"C:\\code_docs\\code_docs\\src\\sign\\reducer.js",[],"C:\\code_docs\\code_docs\\src\\sign\\SignPage.jsx",["29","30","31","32","33","34","35","36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":2,"message":"51","line":41,"column":13,"nodeType":"52","endLine":54,"endColumn":7,"fix":"53"},{"ruleId":"54","severity":2,"message":"55","line":41,"column":13,"nodeType":"56","endLine":54,"endColumn":7,"fix":"57"},{"ruleId":"58","severity":2,"message":"59","line":42,"column":7,"nodeType":"60","endLine":42,"endColumn":23,"fix":"61"},{"ruleId":"58","severity":2,"message":"59","line":43,"column":7,"nodeType":"60","endLine":43,"endColumn":26,"fix":"62"},{"ruleId":"63","severity":2,"message":"64","line":43,"column":24,"nodeType":"65","messageId":"66","endLine":43,"endColumn":25,"fix":"67"},{"ruleId":"58","severity":2,"message":"59","line":44,"column":7,"nodeType":"60","endLine":44,"endColumn":48,"fix":"68"},{"ruleId":"58","severity":2,"message":"59","line":45,"column":7,"nodeType":"60","endLine":53,"endColumn":13,"fix":"69"},{"ruleId":"70","severity":2,"message":"71","line":54,"column":5,"nodeType":"56","fix":"72"},{"ruleId":"73","severity":2,"message":"74","line":54,"column":7,"nodeType":"75","endLine":54,"endColumn":13,"fix":"76"},"lines-around-directive",["77"],"no-spaced-func",["78"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/jsx-one-expression-per-line","`Input` must be placed on a new line","JSXElement",{"range":"79","text":"80"},"react/jsx-indent","Expected indentation of 6 space characters but found 12.","JSXOpeningElement",{"range":"81","text":"82"},"react/jsx-indent-props","Expected indentation of 14 space characters but found 6.","JSXAttribute",{"range":"83","text":"84"},{"range":"85","text":"84"},"object-curly-spacing","A space is required before '}'.","ObjectExpression","requireSpaceBefore",{"range":"86","text":"87"},{"range":"88","text":"84"},{"range":"89","text":"84"},"react/jsx-closing-bracket-location","The closing bracket must be aligned with the line containing the opening tag (expected column 13)",{"range":"90","text":"91"},"react/jsx-closing-tag-location","Closing tag of a multiline JSX expression must be on its own line.","JSXClosingElement",{"range":"92","text":"93"},"padding-line-between-statements","func-call-spacing",[1943,2353],"<Input\r\n      disableUnderline\r\n      style={{ ...props}}\r\n      type={showPassword ? 'text' : 'password'}\r\n      endAdornment={(\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            onClick={() => { setShowPassword(!showPassword); }}\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n          )}\r\n    />\n",[1931,1943],"      ",[1951,1957],"              ",[1975,1981],[1998,1998]," ",[2002,2008],[2051,2057],[2345,2353],"\n            />",[2353,2353],"\n    "]